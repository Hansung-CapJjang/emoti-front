import 'package:flutter/material.dart';
import 'voiceChat.dart';
import 'textChat.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return const MaterialApp(
      debugShowCheckedModeBanner: false,
      home: ChattingSettingScreen(),
    );
  }
}

class ChattingSettingScreen extends StatefulWidget {
  const ChattingSettingScreen({super.key});

  @override
  State<ChattingSettingScreen> createState() => _ChattingSettingScreenState();
}

class _ChattingSettingScreenState extends State<ChattingSettingScreen> {
  String selectedCounselor = 'Í≥µÍ∞êÌòï'; // Í∏∞Î≥∏ ÏÑ†ÌÉùÍ∞í
  String selectedMethod = 'Î¨∏Ïûê ÏÉÅÎã¥'; // Í∏∞Î≥∏ ÏÑ†ÌÉùÍ∞í

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color.fromARGB(255, 195, 211, 114),
      appBar: AppBar(
        automaticallyImplyLeading: false,
        backgroundColor: Colors.transparent,
        elevation: 0,
        title: const Text(
          'ÏÉÅÎã¥ Î∞©Ïãù ÏÑ†ÌÉù',
          style: TextStyle(
            fontFamily: 'DungGeunMo',
            // ontWeight: FontWeight.bold,
            color: Colors.black,
          ),
        ),
        actions: [
          Builder(
            builder: (context) => IconButton(
              icon: const Icon(Icons.menu, color: Colors.black),
              onPressed: () {
                Scaffold.of(context).openEndDrawer();
              },
            ),
          ),
        ],
      ),
      body: Padding(
        padding: const EdgeInsets.symmetric(horizontal: 20),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            const Divider(color: Color.fromARGB(130, 65, 80, 62), thickness: 1),
            const SizedBox(height: 30),
            const Text(
              '‚Äª ÎãòÏù¥ ÏÑ†Ìò∏ÌïòÎäî ÏÉÅÎã¥ÏÇ¨ Ïú†ÌòïÏùÑ\n  ÏßÅÏ†ë ÏÑ†ÌÉùÌïòÏó¨ ÏÉÅÎã¥ Î∞õÏùÑ Ïàò ÏûàÏñ¥Ïöî.',
              style: TextStyle(fontFamily: 'DungGeunMo', fontSize: 14, color: Colors.black54),
            ),
            const SizedBox(height: 20),
            Wrap(
              spacing: 10,
              runSpacing: 10,
              children: [
                _buildOptionButton('Í≥µÍ∞êÌòï', true),
                _buildOptionButton('Ï°∞Ïñ∏Ìòï', true),
                _buildOptionButton('Ïú†Î®∏Îü¨Ïä§Ìòï', true),
              ],
            ),
            const Spacer(),
            const SizedBox(height: 30),
            const Divider(color: Colors.black45, thickness: 0.5),
            const SizedBox(height: 30),
            const Text(
              '‚Äª ÏùåÏÑ±ÏúºÎ°ú ÏÉÅÎã¥ Ïãú ÏÉÅÎã¥ Í∏∞Î°ùÏù¥\n  Ï†ÄÏû•ÎêòÏßÄ ÏïäÏïÑÏöî!',
              style: TextStyle(fontFamily: 'DungGeunMo', fontSize: 14, color: Colors.black54),
            ),
            const SizedBox(height: 20),
            Wrap(
              spacing: 10,
              runSpacing: 10,
              children: [
                _buildOptionButton('Î¨∏Ïûê ÏÉÅÎã¥', false),
                _buildOptionButton('ÏùåÏÑ± ÏÉÅÎã¥', false),
              ],
            ),
            const Spacer(flex: 2),
            Center(
              child: ElevatedButton(
                onPressed: () {
                  if (selectedMethod == 'ÏùåÏÑ± ÏÉÅÎã¥') {
                    Navigator.push(
                      context,
                      MaterialPageRoute(
                        builder: (context) => VoiceChatScreen(
                          counselorType: selectedCounselor, // ÏÑ†ÌÉùÌïú ÏÉÅÎã¥Í∞Ä Ïú†Ìòï Ï†ÑÎã¨
                        ),
                      ),
                    );
                  } else {
                    // ScaffoldMessenger.of(context).showSnackBar(
                    //   const SnackBar(content: Text('Î¨∏Ïûê ÏÉÅÎã¥ÏùÄ ÏïÑÏßÅ Íµ¨ÌòÑÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.')),
                    // );
                    Navigator.push(
                      context,
                      MaterialPageRoute(
                        builder: (context) => TextChatScreen(
                          counselorType: selectedCounselor, // ÏÑ†ÌÉùÌïú ÏÉÅÎã¥Í∞Ä Ïú†Ìòï Ï†ÑÎã¨
                        ),
                      ),
                    );
                  }
                },
                style: ElevatedButton.styleFrom(
                  backgroundColor: const Color(0xFF6C7448),
                  foregroundColor: Colors.white,
                  minimumSize: const Size(200, 50),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(10),
                  ),
                ),
                child: const Text(
                  'ÏÉÅÎã¥ ÏãúÏûëÌïòÍ∏∞',
                  style: TextStyle(fontFamily: 'DungGeunMo', fontSize: 16, fontWeight: FontWeight.bold),
                ),
              ),
            ),
            const SizedBox(height: 20),
            const Spacer(),
          ],
        ),
      ),
      endDrawer: _buildDrawer(),
    );
  }

  /// ÏòµÏÖò ÏÑ†ÌÉù Î≤ÑÌäº UI
  Widget _buildOptionButton(String text, bool isCounselor) {
    bool isSelected = isCounselor ? (selectedCounselor == text) : (selectedMethod == text);

    return GestureDetector(
      onTap: () {
        setState(() {
          if (isCounselor) {
            selectedCounselor = text;
          } else {
            selectedMethod = text;
          }
        });
      },
      child: Container(
        decoration: BoxDecoration(
          color: isSelected ? const Color.fromARGB(255, 242, 251, 195) : const Color.fromARGB(255, 217, 225, 176),
          border: Border.all(
            color: isSelected ? const Color.fromARGB(255, 60, 60, 60) : const Color.fromARGB(255, 60, 60, 60),
            width: isSelected ? 2 : 0,
          ),
          borderRadius: BorderRadius.circular(10),
          boxShadow: const [
            BoxShadow(
              color: Colors.black26,
              offset: Offset(0, 3),
              blurRadius: 4,
            )
          ],
        ),
        child: Padding(
          padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 10),
          child: Text(
            text,
            style: TextStyle(
              fontFamily: 'DungGeunMo',
              fontSize: 16,
              fontWeight: FontWeight.normal,
              color: isSelected ? Colors.black : Colors.black54,
            ),
          ),
        ),
      ),
    );
  }

  /// ÏÑúÎûç (Drawer) UI
Widget _buildDrawer() {
  return Drawer(
    width: MediaQuery.of(context).size.width * 0.8,
    child: Container(
      color: const Color(0xFFEFEFCC), // Î∞∞Í≤ΩÏÉâ Ï°∞Ï†ï
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const SizedBox(height: 80),
          const Padding(
            padding: EdgeInsets.symmetric(horizontal: 20),
            child: Row(
              children: [
                Icon(Icons.arrow_back, size: 30),
                SizedBox(width: 10),
                Text(
                  'Ï±ÑÌåÖ Í∏∞Î°ù',
                  style: TextStyle(fontFamily: 'DungGeunMo', fontSize: 20,),
                ),
              ],
            ),
          ),
          Expanded(
            child: ListView(
              children: [
                _buildChatRecord('2Ïõî 10Ïùº', 'üî•'),
                _buildChatRecord('2Ïõî 8Ïùº', '‚≠ê'),
                _buildChatRecord('2Ïõî 5Ïùº', 'üíß'),
              ],
            ),
          ),
        ],
      ),
    ),
  );
}

/// Ï±ÑÌåÖ Ïù¥Ï†Ñ Í∏∞Î°ù Ìï≠Î™© ÏúÑÏ†Ø
Widget _buildChatRecord(String date, String badge) {
  return Padding(
    padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 0),
    child: Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          date,
          style: const TextStyle(fontFamily: 'DungGeunMo', fontSize: 18,),
        ),
        // const SizedBox(height: 5),
        Row(
          children: [
            // const Text('ÎèÑÏû• ', style: TextStyle(fontFamily: 'DungGeunMo', fontSize: 14)),
            Text(badge, style: const TextStyle(fontFamily: 'DungGeunMo', fontSize: 18)),
          ],
        ),
        const Divider(thickness: 1, color: Colors.black26),
      ],
    ),
  );
}
}